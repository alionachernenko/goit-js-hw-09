{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBACtBD,SAASC,cAAc,UAK5C,SAASG,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WAAWN,EAChBI,EAAQ,CACJN,SAAUA,EACVC,MAAOA,IAIXM,EAAO,CACHP,SAAUA,EACVC,MAAOA,G,GAEXA,E,IAlBUN,SAASC,cAAc,QAE/Ba,iBAAiB,UAoB/B,SAA+BC,GAC3BA,EAAMC,iBACN,IAAIC,EAAU,EACVC,EAAU,EACdd,EAAca,EAASE,OAAOpB,EAAWqB,QACpCC,MAAK,SAAAC,G,IAAEjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAAYiB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IACjGqB,OAAI,SAAAL,G,IAAEjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAAYiB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAuCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IACtG,IAAIuB,EAAaC,aAAY,WACvBb,IAAYE,OAAOhB,EAAYiB,MAAQ,IAAIW,cAAcF,GAC7DZ,GAAW,EACXC,GAAWC,OAAOjB,EAAUkB,OAC5BhB,EAAca,EAASC,EAAUC,OAAOpB,EAAWqB,QAClDC,MAAK,SAAAC,G,IAAEjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAAYiB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IACjGqB,OAAI,SAAAL,G,IAAEjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAAYiB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,MAClGJ,EAAUkB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst delayInput = document.querySelector('input[name=delay]')\nconst stepInput = document.querySelector('input[name=step]')\nconst amountInput = document.querySelector('input[name=amount]')\nconst submitButton = document.querySelector('button')\nconst generatorForm = document.querySelector('form')\n\ngeneratorForm.addEventListener('submit', onGeneratorFormSubmit)\n\nfunction createPromise(position, delay){\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) =>{\n      setTimeout(() => {if (shouldResolve) {\n            resolve({\n                position: position,\n                delay: delay\n            })\n        }\n        else {\n            reject({\n                position: position,\n                delay: delay\n            })\n        }}, delay)\n    })\n}\n\nfunction onGeneratorFormSubmit(event){\n    event.preventDefault()\n    let counter = 1\n    let stepVal = 0\n    createPromise(counter, Number(delayInput.value))\n        .then(({position, delay}) => {Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)})\n        .catch(({position, delay}) => {Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)})\n    const intervalId = setInterval(() => {{\n        if (counter === Number(amountInput.value - 1)) clearInterval(intervalId)\n        counter += 1\n        stepVal += Number(stepInput.value)\n        createPromise(counter, stepVal + Number(delayInput.value))\n        .then(({position, delay}) => {Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)})\n        .catch(({position, delay}) => {Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)})\n    }}, stepInput.value)\n}\n\n\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","counter","stepVal","Number","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","intervalId","setInterval","clearInterval"],"version":3,"file":"03-promises.3fb70d0c.js.map"}